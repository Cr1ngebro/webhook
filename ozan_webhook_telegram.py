from flask import Flask, request, jsonify
import requests
import os

app = Flask(__name__)

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à Telegram —Ç–æ–∫–µ–Ω –∏ chat_id –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤–ø–∏—à–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID", "–í–ê–®_CHAT_ID")

def send_telegram_message(text: str):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text,
        "parse_mode": "Markdown"
    }
    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

@app.route("/webhook/ozan", methods=["POST"])
def ozan_webhook():
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ JSON
        data = request.get_json(force=True)

        if not isinstance(data, dict):
            return jsonify({"error": "Invalid payload format"}), 400

        event_type = data.get("event")
        transaction_id = data.get("transaction_id")
        amount = data.get("amount")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = f'üì¢ *Ozan —Å–æ–±—ã—Ç–∏–µ:* `{event_type}`\n'

        if transaction_id:
            message += f'üí≥ *ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:* `{transaction_id}`\n'

        if amount:
            message += f'üí∞ *–°—É–º–º–∞:* `{amount}`'

        send_telegram_message(message)

        return jsonify({"status": "ok"}), 200
    except Exception as e:
        send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ webhook: {e}")
        return jsonify({"error": str(e)}), 500

@app.route("/")
def index():
    return "Ozan Webhook Handler —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 8000))
    app.run(host="0.0.0.0", port=port)
